$ANALYSIS_LOGS_DIR = "C:\Users\vagrant\vagrant_data\Analysis_Logs"

$payload = $args[0]
$timestamp = [int](Get-Date -UFormat %s -Millisecond 0)
$exec_dur_secs = 60

# Copy payload to C:\
Copy-Item "C:\Users\vagrant\vagrant_data\Payloads\$payload" -Destination "C:\$payload"

# Run Static PE Analysis
cd C:\Tools\pev
Write-Output "[*] Running PEV Tools..."
.\pestr.exe "C:\$payload" > "$ANALYSIS_LOGS_DIR\$timestamp`_$payload`_pestr_log.tmp"
mv $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_pestr_log.tmp $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_pestr_log.txt

.\pehash.exe "C:\$payload" -f json > C:\Users\vagrant\vagrant_data\Analysis_Logs\$timestamp`_$payload`_pehash_log.tmp
mv $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_pehash_log.tmp $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_pehash_log.json

.\peldd.exe -f json C:\$payload > C:\Users\vagrant\vagrant_data\Analysis_Logs\$timestamp`_$payload`_peldd_log.tmp
mv $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_peldd_log.tmp $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_peldd_log.json

.\pescan.exe -f json C:\$payload > C:\Users\vagrant\vagrant_data\Analysis_Logs\$timestamp`_$payload`_pescan_log.tmp
mv $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_pescan_log.tmp $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_pescan_log.json

# Run Capa
cd C:\Tools\capa
Write-Output "[*] Running Capa..."
.\capa.exe -j "C:\$payload" > C:\Users\vagrant\vagrant_data\Analysis_Logs\$timestamp`_$payload`_capa_log.tmp
mv $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_capa_log.tmp $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_capa_log.json

.\capa.exe "C:\$payload" > C:\Users\vagrant\vagrant_data\Analysis_Logs\$timestamp`_$payload`_capa_log.txt.tmp
mv $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_capa_log.txt.tmp $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_capa_log.txt

# Begin Dynamic Analysis

# Run Fakenet
cd C:\Tools\fakenet
Write-Output "[*] Running Fakenet..."
Start-Process -FilePath "C:\Tools\fakenet\fakenet.exe" -ArgumentList "-l $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_fakenet_log.txt.tmp" -WindowStyle Hidden
# C:\Tools\fakenet\fakenet.exe -WindowStyle Hidden > $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_fakenet_log.txt.tmp

# Run ProcMon
Write-Output "[*] Running ProcMon..."
procmon /Quiet /BackingFile C:\$timestamp`_$payload`_procmon_log

# Let Fakenet Initialize
Start-Sleep -Seconds 30

# Execute Payload
Write-Output "[*] Executing $payload"
Start-Process -FilePath "C:\$payload" -WindowStyle Hidden

# Sleep while process executes
Start-Sleep -Seconds $exec_dur_secs

# Stop Fakenet
Stop-Process -Name "fakenet"
Write-Output "[*] Fakenet Stopped"
mv $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_fakenet_log.txt.tmp $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_fakenet_log.txt
mv C:\Tools\fakenet\*.pcap $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_fakenet_log.pcap
Write-Output "[*] Fakenet PCAP saved to Analysis_logs"

# Terminate ProcMon
procmon /Terminate
while (Get-Process procmon -ErrorAction Ignore) {
     Write-Host "Waiting on procmon to exit"
     Start-Sleep -Seconds 5
 }
mv C:\$timestamp`_$payload`_procmon_log.pml $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_procmon_log.pml
procmon /OpenLog C:\$timestamp`_$payload`_procmon_log.pml /SaveAs $timestamp`_$payload`_procmon_log.csv

# Get Reg Keys via Autoruns
autorunsc.exe -m > $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_autoruns_log.txt.tmp
mv $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_autoruns_log.txt.tmp $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_autoruns_log.txt
autorunsc.exe -c -m -nobanner > $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_autoruns_log.tmp
mv $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_autoruns_log.tmp $ANALYSIS_LOGS_DIR\$timestamp`_$payload`_autoruns_log.csv

Write-Output "[*] Analysis complete!"